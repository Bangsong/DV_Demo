<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!-- 该配置文件是mybatis与spring的整合 -->

    <!-- 整合的固定写法，配置SqlSessionFactory -->
    <!-- mybatis文件配置，扫描所有mapper.xml文件 -->
    <!-- 配置mybatisSqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" /><!-- 使用的数据源 -->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml" /><!-- mybatis的配置文件 -->
        <property name="mapperLocations" value="classpath*:com/DV/dao/xml/*Mapper.xml" /><!-- 自动扫描mapper的xml文件 -->
    </bean>
    <!-- 配置SqlSessionTemplate -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>
    <!-- 为每个Mapper接口在运行时动态生成实现类 -->
    <!-- 配置mybatis mapper接口，扫描所有dao -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.DV.dao.mapper" /><!-- 自动扫描mapper接口，为每个接口生成MapperFactoryBean -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" /><!-- 如果有多个数据源的话，须指定使用哪一个 -->
    </bean>
</beans>